name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./AlchemyWallet\ 2
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './AlchemyWallet 2/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run backend tests
        run: npm test -- --coverage
      
      - name: Upload backend coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ./AlchemyWallet\ 2/coverage/

  test-e2e:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./AlchemyWallet\ 2
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './AlchemyWallet 2/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      
      - name: Run E2E tests
        run: npm run test:e2e -- --reporter=html
      
      - name: Upload E2E test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: e2e-results
          path: ./AlchemyWallet\ 2/playwright-report/

  build:
    runs-on: ubuntu-latest
    needs: [test-backend, test-e2e]
    defaults:
      run:
        working-directory: ./AlchemyWallet\ 2
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './AlchemyWallet 2/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Type check
        run: npm run check

  coverage-report:
    runs-on: ubuntu-latest
    needs: [test-backend, test-e2e, build]
    if: always() && (needs.test-backend.result == 'success' || needs.test-e2e.result == 'success')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download backend coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: ./coverage/backend/
        continue-on-error: true
      
      - name: Download E2E test artifacts
        uses: actions/download-artifact@v4
        with:
          name: e2e-results
          path: ./coverage/e2e/
        continue-on-error: true
      
      # Consolidated step: Upload coverage reports to Codecov
      - name: Upload consolidated coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          flags: consolidated
          name: consolidated-coverage
          fail_ci_if_error: false
      
      # Consolidated step: Generate coverage summary markdown
      - name: Generate consolidated coverage summary
        run: |
          echo "# 📊 Test Coverage Report" > coverage-summary.md
          echo "" >> coverage-summary.md
          
          # Backend coverage summary
          if [ -f "./coverage/backend/coverage-summary.txt" ]; then
            echo "## 🔧 Backend Test Coverage" >> coverage-summary.md
            cat "./coverage/backend/coverage-summary.txt" >> coverage-summary.md
          else
            echo "## 🔧 Backend Test Coverage" >> coverage-summary.md
            echo "Backend coverage data not available" >> coverage-summary.md
          fi
          echo "" >> coverage-summary.md
          
          # E2E test summary
          echo "## 🎭 E2E Test Results" >> coverage-summary.md
          if [ -d "./coverage/e2e/" ]; then
            echo "E2E tests completed successfully" >> coverage-summary.md
          else
            echo "E2E test results not available" >> coverage-summary.md
          fi
          echo "" >> coverage-summary.md
          
          # Build status
          echo "## 🏗️ Build Status" >> coverage-summary.md
          echo "Build and type checking completed successfully" >> coverage-summary.md
          
          cat coverage-summary.md
      
      # Consolidated step: Comment on pull requests with coverage
      - name: Comment PR with consolidated coverage report
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary = '';
            try {
              summary = fs.readFileSync('coverage-summary.md', 'utf8');
            } catch (e) {
              summary = '# 📊 Test Coverage Report\n\nCoverage summary not available';
            }
            
            // Check if we already commented to avoid duplicates
            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const existingComment = comments.data.find(comment => 
              comment.body.includes('📊 Test Coverage Report') && 
              comment.user.type === 'Bot'
            );
            
            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                comment_id: existingComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: summary
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: summary
              });
            }